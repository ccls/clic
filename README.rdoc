= CCLS CLIC

UC Berkeley, School of Public Health, California Childhood Leukemia Study

Childhood Leukemia International Consortium



The following needs updating to match the recent upgrade to regular ruby and rails 3.




== Requirements

* ruby >= 1.9
* ImageMagick (which may require {MacPorts}[http://www.macports.org/])
  * ImageMagick is used to image manipulation


== Required Gem Sources

 gem sources -a http://rubygems.org
 gem sources -a http://gems.github.com

== Required Gems

* {sunspot}[http://github.com/outoftime/sunspot] - Sunspot for solr gem usage
* {RedCloth}[http://redcloth.org] - textile parser. (moving away from this using TinyMCE instead)
* {chronic}[http://chronic.rubyforge.org] - natural language Date/Time parser. (also required for BackgrounDRb)
* {acts_as_list}[http://github.com/ryanb/acts-as-list] - for maintaining order in all things listable
* {mocha}[http://github.com/floehopper/mocha] - testing
* {autotest-rails}[http://rubyforge.org/projects/zentest] - testing
* {ZenTest}[http://www.zenspider.com/ZSS/Products/ZenTest/] - testing
* {thoughtbot-factory_girl}[http://github.com/thoughtbot/factory_girl] - testing
* {will_paginate}[http://github.com/mislav/will_paginate] - for object pagination
* {Paperclip}[http://github.com/thoughtbot/paperclip] - for managing attachments and images


== IMPORTANT NOTES


* For the time being, do not use apostrophes in the filenames of any uploaded files.  I think that Paperclip does not deal with them, at least using expiring_url, and somehow the signature is incorrect.
* possible fix ... http://www.davesouth.org/stories/make-url-friendly-filenames-in-paperclip-attachments


== Installation 

 #	Copy secret_token file.
 cp config/initializers/secret_token.rb.example config/initializers/secret_token.rb

 #	Copy and setup database file.
 cp config/database.yml.example config/database.yml

 #	Copy and add your own gmail credentials.
 cp config/initializers/mail.rb.example config/initializers/mail.rb


Not using jruby any longer.  YAY!




rvm / jruby installation ( {Installing RVM}[http://rvm.beginrescueend.com/rvm/install/] ) ...

 curl http://rvm.beginrescueend.com/releases/rvm-install-head | bash
 #	or
 sudo gem install rvm
 /usr/lib/ruby/user-gems/1.8/gems/rvm-0.1.27/bin/rvm-install
 #
 # rvm installation has changed now I believe
 #

 # add ... 
 #	if [[ -s ~/.rvm/scripts/rvm ]] ; then source ~/.rvm/scripts/rvm ; fi
 # to your .bashrc
 vi .bashrc
 bash
 #
 #	our server uses jruby 1.5.1 so we should dev and test on it as well.
 #
 rvm install jruby-1.5.1
 rvm use jruby-1.5.1
 # and perhaps
 rvm --default jruby-1.5.1




For standard ruby users, install mysql gem ...

 #	If using mysql ...
 # On Mac OS X:
 #   sudo gem install mysql -- --with-mysql-dir=/usr/local/mysql
 # On Mac OS X Leopard:
 #   sudo env ARCHFLAGS="-arch i386" gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config
 # ... I had to install the mysql gem like so ...

 sudo env ARCHFLAGS="-arch x86_64" gem install mysql -- --with-mysql-config=/usr/local/mysql/bin/mysql_config




Everybody join hands together now to install some gems ...

 #
 # Some gems require manual installation for one reason or another.
 #
 # (sudo may or may not be required or desired.
 #  Usage of sudo will/may cause gem installation in /usr/lib
 #  which may then require using sudo when running rake tasks
 #  or other things.  `gem list` and `sudo gem list` will differ.
 #  I recommend avoiding using sudo with rvm, but its your
 #  kitchen.)
 #
 gem source -a http://gemcutter.org
 gem source -a http://gems.github.com
 sudo gem install bundler

 # preferably use bunlder to install all specific gem versions
 sudo bundle install

 # OR with gem, which may not match versions
 #
 sudo gem install hpricot
 sudo gem install rake -v '=0.8.7'
 sudo gem install rdoc -v '~> 2'
 sudo gem install rails -v '~> 2'
 #
 # The rest should actually install with ...
 #
 sudo rake gems:install
 #
 # This eventually crashed with ...
 #
 #	Error: Your application used more memory than the safety cap of 500m.
 #	Specify -J-Xmx####m to increase it (#### = cap size in MB).
 #	Specify -w for full OutOfMemoryError stack trace
 #
 # ... but a rerun continued and completed.
 #
 sudo rake gems:install
 #
 # Some gems are defined in the environments/test.rb file
 #
 sudo rake gems:install RAILS_ENV=test



 
then we continue ...

 #	Add your own session secret to config/initializers/session_store.rb
 #	generate a 128 character hex string perfect for using as your secret.
 rake secret

 rake db:migrate

 #	add some expected items (loads fixtures OVERWRITING some db data)
 rake app:setup

 script/server

 #	login to your app
 #	The first administrator/deputy must be created via the command line.
 #	Others can be created via the command line or web app.
 #
 rake app:deputize username=<Your Username>




== Production Installation

As this app is being installed on a VM Java jruby tomcat thing, we need special instructions.  Apparently, for Tomcat 5, we need to use jruby-rack-0.9.6.jar, which is included in lib/.

Tomcat will unarchive the war file and DESTROY the existing unarchived version!  Any file uploads will need to be kept elsewhere.  This is also true for the db, if using sqlite.

 ( warble from a jruby environment to get the jruby specific gems )

 # prepare the war file on a development machine
 [jakewendt@dev : clic ]> bash
 [jakewendt@dev : clic ]> rvm use jruby
 [jakewendt@dev : clic ]> warble
 [jakewendt@dev : clic ]> scp clic.war ccls.berkeley.edu:


 # stop tomcat as "jakewendt"
 [jakewendt@dev : clic ]> ssh ccls
 [jakewendt@ccls-01:~]> sudo /sbin/service tomcat5 stop


 # copy in new war file as "tomcat" ( backup first? )
 [jakewendt@ccls-01:~] > sudo su -l tomcat
 [tomcat@ccls-01:~] > /bin/rm -rf /var/lib/tomcat5/webapps/clic
 [tomcat@ccls-01:~] > cp ~jakewendt/clic.war /var/lib/tomcat5/webapps/
 [tomcat@ccls-01:~] > exit


 # start tomcat as "jakewendt"
 [jakewendt@ccls-01:~] > sudo /sbin/service tomcat5 start
 [jakewendt@ccls-01:~] > tail -f /var/log/tomcat5/catalina.out






 #
 #
 #	The CLIC site no longer uses this functionality, but it has not been 
 #	removed from the app.  Just the menu item.  Don't bother starting it.

 # start sunspot:solr server (sunspot:solr:start does not work in jruby)
 [jakewendt@ccls-01:~] > sudo su -l tomcat
 [tomcat@ccls-01:~] > cd /var/lib/tomcat5/webapps/clic/WEB-INF
 [tomcat@ccls-01:WEB-INF] > rake sunspot:solr:run RAILS_ENV=production &
 # log MAY BE at /var/lib/tomcat5/webapps/clic/WEB-INF/log/sunspot-solr-production.log



{Kenai}[http://kenai.com/projects/warbler/pages/Home]

{Berkeley Wiki}[https://wikihub.berkeley.edu/display/istas/Getting+Started+with+JRuby]


== Documentation

Inline documentation is sparse and incomplete, but I'm working on it.

 sudo gem install rdoc --source http://gemcutter.org
 rake doc:plugins
 rake doc:app
 open doc/app/README_rdoc.html


== Further Info

{Ruby Best Practices}[http://github.com/sandal/rbp-book/tree/gh-pages/pdfs/]

{RVM on GitHub}[http://github.com/wayneeseguin/rvm]


== To Do

* Fix <tt>expire_fragment "#{request.try(:host_with_port)}#{page_path}"</tt> so that it works without the <tt>try</tt> (not necessary)
* Add to <tt>doc/README_FOR_APP</tt>
* one of the images in rdoc isn't always the correct directory depth and will create a flash error showing this




== Credit / Special Thanks

Gradient images made with {Gradient Image Maker}[http://tools.dynamicdrive.com/gradient/]

{Demo on css rounded corners}[http://css-radius.heroku.com]

{Background image gradients}[http://gradients.glrzad.com/]



== SQLite3 to MySQL

 sqlite3 clic.sqlite3.20110809 .dump > clic.sqlite3.20110809.dump

Edit the dump file and remove all lines like ...

 PRAGMA foreign_keys=OFF;
 BEGIN TRANSACTION;
 CREATE TABLE ....
 INSERT INTO "schema_migrations" ...
 DELETE FROM sqlite_sequence;
 INSERT INTO "sqlite_sequence" ....
 CREATE UNIQUE INDEX ....
 CREATE INDEX ....
 COMMIT;

Convert table name quotes from double quotes to backticks in vim with ...

 %s/INSERT INTO "/INSERT INTO `/
 %s/" VALUES(/` VALUES(/

Import to mysql database

 rake db:migrate RAILS_ENV=production
 mysql -u magee -p --host=cascades.ist.berkeley.edu --port=3347 CCLS_Systems < clic.sqlite3.20110809.dump.forimport


The boolean values did not export/import well, but none were terribly important.  This should be noted if ever doing this again with boolean values that do matter.


== Other


Forking is frowned upon in jruby so using "start" won't work.  
To start the solr server just "run" it in the background.
Can't seem to get a "commit" to work in production so need to build the index
elsewhere and import everything.  Not gonna work in the long term.
Also has a tendency to crash out silently.

 rake sunspot:solr:run &
 cp ~jakewendt/CCLS_Aust_Covariate_sample.csv ./
 rake app:subjects:import --trace
 rake "sunspot:reindex" --trace

