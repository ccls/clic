#	#Dir["#{File.dirname(__FILE__)}/config/autotest/**/*rb"].sort.each { |ext| load ext }
#	
#	
#	##!/usr/bin/env ruby
#	
#	gem 'activesupport'	#, '~> 2'
#	require 'active_support/core_ext'	#	for alias_method_chain
#	
#	#	how do I colorize with the whole red green thing
#	
#	class Autotest
#	
#	#	20120316 ...
#	#/Library/Ruby/Gems/1.8/gems/ZenTest-4.7.0/lib/unit_diff.rb:73:in `gets': No such file or directory - -u (Errno::ENOENT)
#	
#	#
#	#	not true anymore apparently
#	#
#	#	def run_tests_with_correct_unit_diff
#	#		#http://syntatic.wordpress.com/2009/08/13/jruby-1-3-0-with-autotest/
#	#		self.unit_diff = if RUBY_PLATFORM == 'java'
#	#			"unit_diff"
#	#		else
#	#			"unit_diff -u"
#	#		end
#	#		run_tests_without_correct_unit_diff
#	#	end
#	#	alias_method_chain :run_tests, :correct_unit_diff
#	
#		def rerun_all_tests_with_flag
#			#
#			#		use some sort of command line option to stop this
#			#		surprised this doesn't exist
#			#
#	
#			#	perhaps set this flag in a file so that can be modified
#			#	without restarting autotest.
#	
#	#		unless ENV['AUTOTEST_RERUN_ALL'] == 'false'
#	#	make not rerunning them all the default
#			if ENV['AUTOTEST_RERUN_ALL'] == 'true'
#				rerun_all_tests_without_flag
#			end
#		end
#		alias_method_chain :rerun_all_tests, :flag
#	
#	end
#	


Autotest.add_hook :initialize do |autotest|
	%w{ to_upload/ }.each do |exception|
		autotest.add_exception(exception)
	end
end


class Autotest
  def rerun_all_tests
		puts
		puts	"My Autotest.rerun_all_tests was called"
		puts
  end
end

Autotest.add_hook :post_initialize do |autotest|
	#	by default it is 'minitest/autorun' which if fine, but I can't figure
	#	out how to stop it from running all tests when one file changes.
	autotest.testlib           = "test/unit"
end
